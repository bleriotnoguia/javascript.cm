# .cursorrules

## Schémas de mise en œuvre critiques

- Utilisation de Dockerfiles multi-stage pour optimiser la taille des images et améliorer la sécurité
- Séparation des responsabilités entre les services Docker
- Utilisation de l'étape de dépendances du Dockerfile pour le service de migrations
- Configuration des variables d'environnement pour une flexibilité maximale
- Utilisation de volumes Docker pour la persistance des données et le développement en temps réel

## Préférences de l'utilisateur et flux de travail

- Préférence pour une architecture basée sur des conteneurs Docker
- Utilisation de Node.js 20.12.2 pour la production
- Utilisation de MySQL 8.0 pour la base de données
- Configuration des variables d'environnement via le fichier .env
- Exécution des migrations via un service dédié

## Schémas spécifiques au projet

- Architecture en trois services : App, MySQL et Migrations
- Utilisation d'AdonisJS comme framework backend
- Configuration Docker optimisée pour le développement et la production
- Script d'initialisation pour la base de données MySQL
- Service dédié pour les migrations de base de données

## Défis connus

- Configuration correcte des variables d'environnement pour tous les services
- Exécution fiable des migrations de base de données
- Optimisation des images Docker pour réduire la taille et améliorer la sécurité
- Gestion des dépendances entre les services Docker

## Évolution des décisions du projet

- Passage d'une configuration simple à une architecture basée sur des conteneurs Docker
- Optimisation du Dockerfile Node.js avec un build multi-stage
- Création d'un service dédié pour les migrations de base de données
- Utilisation de l'étape de dépendances du Dockerfile pour le service de migrations

## Schémas d'utilisation des outils

- Utilisation de Docker et Docker Compose pour la conteneurisation
- Utilisation de Node.js et npm pour le développement backend
- Utilisation de MySQL pour la base de données
- Utilisation d'AdonisJS comme framework backend
- Utilisation de volumes Docker pour la persistance des données et le développement en temps réel 